<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkbox_outline" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABMUlEQVRYR+2XUUoDMRRFZyVF3Eqp/rgc
        ofhR8NOFdBf+9MNtqNRF2PZL72m5UMLUSexLRyEHDgwZ8nLnkcCkazQqciPv5TxYalK7iKX8qixrZEH6
        vgI1nMlBHqQnvMinYKnp+qw1yKP0BJ6jKa7fAg0RHWgqrw+Pe0YNxIn9lB/SoUYLRJiNdK2VhFECuTOu
        s5ajdeinMHDRQENhICwQhTkxp7iVx3vmXV7JlJBAE/kmt/KOgYR0A/d1xoQE4oR4jIXphsntjAkJRIde
        pcd3kk6VdMaEBAK+mq/3O4KUdMaEBYK0UzanMyY0EKShSsJAeCBwqNIwUCUQsF9y9kxKtUC/5f8HOv7J
        f5Z9d6tzpKbrZ/3kczXxhNpmXYPgT10UDekXsu9udY7UzO5Mo1FG130DMHRZ79lz0IQAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="layers_triple_36b" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAACg0lEQVRYR8XYTYiNURzH8ev9JVHMEJLX
        RNnMNA0biiwoYSOysGNhI0qys7ShlI0aGysLDRZIeSlKJCQlFhLKJK95CWH4/ur+69/pXPd5znmemV99
        aua55znnuXP7/8+506gg43ACpzBRF4Yzc3AHf5vuYwGGJevxHvYw5hM2Y8gyAgfwB+HDmEEcxkjUmqm4
        hNhDxFzDdNSSLjxDbOH/eYnlqDQ78A2xBYv4gT3IjpV0bJEUWa0hLOmqJLWGViVdlVKtoRu/EJuoSlpD
        axVK3X+hd1iHUpmPe4hNmOMu5iIpdVTZBGQntw99x05UmtRO/QK9yMpoHME+aDO1TEOZvewCtP9ZNNdB
        HMUYXSiSTlyFTXoeU2BJ3e0n4wxszE3MQtvoga7AL/AUy+CzBm/gx4naRVjSS/AYfpweaCYKRR+Z3qHe
        qU3wBdvgo+3lNmxMbFvYjq+wMaLKLfyR+WzBZ/jJjsFPNh59TfrZMhbH4e/VXJozK4vxCH7ids1tNm7B
        3/ME4ceenEk4Db/AW6xFmFUYgB97Dr4wkjIPKnOfvfAbr37eD1WeVd9v+Nd1j4+OtNqWSsU21+fo0QWX
        lXgNW1T6m/w1jdFYnxV4Bc2tNQolPH7E2r7K9Qb8A3h6LSzp3fgJG1Pq+LEaYY8Jj5+x1iBhSavyTsKP
        ifWqtgl7jDzAQvhsgk6A6lNbdcFlER7Cz5H17dZ6jJ/wAzbAZ2mTz0Z8hL837FXJCY8ftleNQhhdOwS/
        1+lr0C5Umtjx4zpmwNKBy/Bj9EUx+/jRKmpuZ+EXVBmrnFUxahP+tYvwx49aoiNF7CMR+12vaUzt/2zw
        ibUGSSrpqlLk+DHkaXX8SEij8Q9x99QkIXRSrAAAAABJRU5ErkJggg==
</value>
  </data>
</root>